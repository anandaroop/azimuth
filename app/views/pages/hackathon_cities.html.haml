/ SO MUCH HACKY HACKATHON CODE HERE!!!

#map-container
  #map{ style: 'position: absolute; left: 0; top: 0; width: 100%; height: 100%; z-index: -1' }
  #cities= render partial: 'shared/cities_nav'
  .carousel.main
    / carousel cells will be appended here

:scss

  // font mixins copied from Watt
  $serif: "Adobe Garamond W08", Georgia, Serif;
  $sans-serif: "ITC Avant Garde Gothic W04", "Helvetica Neue", Arial, Helvetica, sans-serif;
  @mixin avant-garde() {
    font-family: $sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-weight: normal;
    text-transform: uppercase;
  }
  @mixin garamond() {
    font-family: $serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  // end font mixins

  .carousel {
    position: absolute;
    bottom: 0;
    width: 100%;
    height: calc(20vh + 20px);
    background: hsla(0, 0%, 0%, 0.1);
    .carousel-cell {
      background: white;
      width: 80vw;
      max-width: 1200px;
      height: 20vh;
      top: 10px;
      overflow: hidden;
      opacity: 0;
      transition: opacity .2s;
      &.is-selected {
        opacity: 1;
        transition: opacity .2s;
      }
      box-shadow: 0 0 10px #ccc;
    }
  }

  .carousel-show {
    height: 100%;
  }

  .carousel-show__partner {
    margin-top: 10px;
    width: calc(100% - 20vh - 20px);
    float: right;
    @include avant-garde();
    font-size: 0.8em;
    letter-spacing: 0.1em;
  }
  .carousel-show__artists {
    width: calc(100% - 20vh - 20px);
    float: right;
    margin: 0.5em 0;
    color: #999;
  }
  .carousel-show__name {
    font-size: 2em;
    width: calc(100% - 20vh - 20px);
    margin: 10px 0;
    float: right;
  }
  .carousel-show__image {
    float: left;
    width: 20vh;
    height: 100.1%;
    position: relative;
    img {
      max-width: calc(20vh - 20px);
      max-height: calc(20vh - 20px);
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translateX(-50%) translateY(-50%);
    }
  }
  .carousel-show__description {
    width: calc(100% - 20vh - 20px);
    float: right;
  }

  .gray-placeholder {
    width: calc(100% - 20px);
    height: calc(100% - 20px);
    margin: 10px 0 0 10px;
    background: #eee;
    border: solid 1px #ccc;
  }

  @keyframes pulse {
      0%   {stroke-width: 6px; opacity: 0.75; }
      50%  {stroke-width: 1px; opacity: 1.00; }
      100% {stroke-width: 6px; opacity: 0.75; }
  }

  .highlight-marker {
    stroke-width: 5px;
    animation-name: pulse;
    animation-duration: 3s;
    animation-iteration-count: infinite;
  }


:coffeescript

  Azimuth = window.Azimuth or {}

  # SHOW CLASS

  class Azimuth.CarouselShow
    constructor: (show) ->
      @show = show
      @initialize()

    initialize: ->
      @map = null
      @carouselIndex = null
      @marker = @createMarker()
      @highlightMarker = @createHighlightMarker()
      @template = _.template '''
        <article class="carousel-show">
          <% if (image_urls) { %>
            <div class="carousel-show__image"><img src="<%= image_urls.square %>" /></div >
          <% } else { %>
            <div class="carousel-show__image"><div class="gray-placeholder"></div></div >
          <% } %>
          <div class="carousel-show__partner"><%= partner.name %></div >
          <h1 class="carousel-show__name"><a href="https://www.artsy.net/show/<%= id %>" target=_show><%= name %></a></h1>
          <div class="carousel-show__description"><%= description %></div >
          <div class="carousel-show__artists">
          <% if (artists && artists.length > 0) { %>
            <strong>Artists in this show</strong>: <%= artists.map(function(a){return a.name}).join(', ') %>
          <% } else { %>
            <!-- no artists -->
          <% } %>
          
          </div >
        </article>
      '''

    titleLink: -> '<a href="https://www.artsy.net/show/' + @show.id + '">' + @show.name + '</a>'

    color: ->
      color = switch @show.partner.type
        when 'Gallery' then Azimuth.Colors.purpleRegular
        else Azimuth.Colors.redRegular

    createMarker: -> 
      marker = @createCircleMarker radius: 12, strokeWeight: 1.5
      marker.bindTooltip(@titleLink())
      marker.on 'click', =>
        @.focus()

    createCircleMarker: (opts) ->
      L.circleMarker(@show.coordinates,
        radius: opts.radius,
        # stroke
        stroke: true,
        color: '#ffffff',
        weight: opts.strokeWeight,
        opacity: 1,
        # fill
        fill: true,
        fillColor: @color(),
        fillOpacity: 0.75
      )      

    createHighlightMarker: ->
      m = L.circleMarker(@show.coordinates,
        radius: 20,
        # stroke
        stroke: true,
        color: @color(),
        weight: 2,
        opacity: 1,
        # fill
        fill: true,
        fillColor: @color(),
        fillOpacity: 0.15
        className: 'highlight-marker'
      )
      m.isHighlight = true
      m

    getMarkup: ->
      @template(@show)

    focus: ->
      @map.focusShow(@)

  # MAP CLASS

  class Azimuth.CarouselMap
    constructor: (options = {}) ->
      { selector, mapOptions } = options
      @$el = $(selector)
      @initialize(mapOptions)
      @fetchData()

    initialize: (options) ->
      @map = L.map(@$el.get(0), options)
      @map.addLayer L.tileLayer Azimuth.Mapbox.urlFor(options.mapboxStyleId, '#{@mapbox_token}')
      @center = options.center
      @shows = {}
      @focusedShow = null
      @markers = L.layerGroup().addTo(@map)
      @$carousel = @$el.siblings('.carousel.main')

    fetchData: ->
      $.getJSON window.location.pathname + '.json?latlng=' + @center.lat + ',' + @center.lng
        .done (data) =>
          @updateMap data
        .fail ->
          alert 'Could not fetch the data!'

    updateMap: (shows) ->
      _.each shows, (show) => 
        carouselShow = new Azimuth.CarouselShow(show)
        @addShow(carouselShow) if show.location?
      @enableCarousel()      

    addShow: (carouselShow) ->
      @shows[carouselShow.show.id] = carouselShow

      @markers.addLayer(carouselShow.marker)
      $cell = $('<div class="carousel-cell" data-show-id=' + carouselShow.show.id + '>' + carouselShow.getMarkup() + '</div>')
      $cell.appendTo(@$carousel)
      $cell.addClass(carouselShow.show.id)
      carouselShow.map = this
      carouselShow.carouselIndex = $cell.index()

    findShow: (id) -> @shows[id]

    focusShow: (azShow) ->
      @setViewWithCarouselOffset(azShow.show.coordinates, 14)
      @selectCell(azShow.carouselIndex)
      @focusedShow = azShow
  
    highlightShow: (azShow) ->
      @map.addLayer(azShow.highlightMarker)

    unhighlightAll: () ->
      @map.eachLayer (l) => l.removeFrom(@map) if l.isHighlight

    enableCarousel: ->
      @$carousel.flickity(
        setGallerySize: false
        wrapAround: true
      )
      @$carousel.on 'select.flickity', =>
        flkty = @$carousel.data('flickity')
        showId = $(flkty.selectedCell.element).data('showId')
        azShow = @findShow(showId)
        @unhighlightAll()
        @highlightShow(azShow)
        @setViewWithCarouselOffset(azShow.show.coordinates, 14)
      # @$carousel.flickity('select', 0)

    setViewWithCarouselOffset: (latlng, zoom) ->
      heightOffset = (@$carousel.height() - $('nav.cities').height()) / 2
      targetPoint = @map.project(latlng, zoom).add([0, heightOffset])
      offsetCenter = @map.unproject(targetPoint, zoom)
      @map.setView(offsetCenter, zoom);

    # delegated to Flickity carousel
    selectCell: (idx) -> @$carousel.flickity('select', idx, true, true)

  $ ->
    latLng = "#{@latlng}".split(',')
    latLngObj = lat: latLng[0], lng: latLng[1]
    console.log 'tryn with', latLngObj

    window.azmap = new Azimuth.CarouselMap
      selector: '#map'
      mapOptions:
        mapboxStyleId: 'cirwwo4ii001ug6m8zf4co2d5' # v3 chill on the roads at smaller scales
        center: latLngObj
        zoom: 13,
        minZoom: 11,
